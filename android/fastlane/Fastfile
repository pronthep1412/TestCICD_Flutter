# android/fastlane/Fastfile - Static Android Fastlane Configuration
default_platform(:android)

platform :android do
  before_all do
    ENV["FASTLANE_SKIP_UPDATE_CHECK"] = "1"
    setup_ci if ENV['CI']
  end

  desc "Deploy to Google Play Store"
  lane :deploy do |options|
    track = options[:track] || "internal"
    
    UI.message("🚀 Deploying Android to Google Play")
    UI.message("📍 Track: #{track}")
    UI.message("📦 Current directory: #{Dir.pwd}")
    
    # Verify AAB exists
    aab_path = "../build/app/outputs/bundle/release/app-release.aab"
    abs_aab_path = File.expand_path(aab_path)
    
    unless File.exist?(abs_aab_path)
      UI.user_error!("❌ AAB file not found at: #{abs_aab_path}")
    end
    
    aab_size = File.size(abs_aab_path) / 1024.0 / 1024.0
    UI.message("📏 AAB size: #{aab_size.round(2)} MB")
    
    # Upload to Google Play Store
    upload_to_play_store(
      track: track,
      aab: abs_aab_path,
      json_key: "google-play-key.json",
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
      release_status: track == "production" ? "completed" : "draft"
    )
    
    UI.success("✅ Successfully deployed to #{track} track!")
  end
  
  # Helper lanes for specific branches
  desc "Deploy to production (main branch)"
  lane :deploy_production do
    deploy(track: "production")
  end
  
  desc "Deploy to beta (staging branch)"
  lane :deploy_beta do
    deploy(track: "beta")
  end
  
  desc "Deploy to internal (develop branch)"
  lane :deploy_internal do
    deploy(track: "internal")
  end
  
  # Debug/testing lane
  desc "Build only (no deploy)"
  lane :build_only do
    gradle(task: "clean assembleRelease")
    UI.success("✅ Android build completed!")
  end
  
  # Error handling
  error do |lane, exception|
    UI.error("❌ Error in #{lane}: #{exception.message}")
    
    # Upload logs for debugging
    if ENV['CI']
      UI.message("📋 Fastlane logs available in artifacts")
    end
  end
end